name: 🚀 Terraform CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

env:
  TF_VERSION: "1.6.0"
  AWS_REGION: "us-east-1"

jobs:
  terraform-plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication
      contents: read    # Required to read repo contents
      pull-requests: write  # Required to comment on PRs
    
    outputs:
      tfplanExitCode: ${{ steps.plan.outputs.exitcode }}
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::269599744150:role/github-actions-terraform-role
          role-session-name: GitHubActions-TerraformPlan
          aws-region: ${{ env.AWS_REGION }}
      
      - name: 🏗️ Terraform Init
        id: init
        run: |
          cd terraform
          terraform init
      
      - name: 🔍 Terraform Validate
        id: validate
        run: |
          cd terraform
          terraform validate -no-color
      
      - name: 📋 Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -detailed-exitcode -no-color -out=tfplan
        continue-on-error: true
      
      - name: 📝 Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: ❌ Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: 💾 Upload Terraform Plan
        uses: actions/upload-artifact@v4
        if: steps.plan.outputs.exitcode == 2
        with:
          name: tfplan
          path: terraform/tfplan

  terraform-apply:
    name: 🚀 Terraform Apply
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: production
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::269599744150:role/github-actions-terraform-role
          role-session-name: GitHubActions-TerraformApply
          aws-region: ${{ env.AWS_REGION }}
      
      - name: 🏗️ Terraform Init
        run: |
          cd terraform
          terraform init
      
      - name: 📥 Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform/
      
      - name: 🚀 Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

  security-scan:
    name: 🔐 Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔍 Run tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif
          working_directory: terraform
      
      - name: 📊 Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: tfsec.sarif

      - name: 🔍 Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          framework: terraform
          quiet: true
          soft_fail: true
          output_format: sarif
          output_file_path: checkov.sarif
      
      - name: 📊 Upload Checkov SARIF
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: checkov.sarif